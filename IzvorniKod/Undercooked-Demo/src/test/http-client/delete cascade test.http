@api = http://localhost:8080/api

### register user
POST {{api}}/register
Content-Type: application/json

{
  "username": "tester",
  "email": "nemam@pojma.hr",
  "password": "testy",
  "name": "Test",
  "surname": "Er."
}

> {%
    client.assert(response.status == 200);
%}

### login user
POST {{api}}/token
Authorization: Basic tester testy

> {%
    client.global.set("token", response.body.token);
%}

### login admin
POST {{api}}/token
Authorization: Basic admin pass

> {%
    client.global.set("admin_token", response.body.token);
%}

### Add new recipe as admin user
POST {{api}}/recipes
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "name": "delete me",
  "preparationTime": "PT90M",
  "description": "za obrisati",
  "preparationDescription": "1. Stvori\n2. Obriši",
  "category": "Desert",
  "ingredients": [
    {
      "ingredient": {
        "name": "ništa"
      },
      "amount": 0
    }
  ]
}

> {%
    client.global.set("recipe_id", response.body.id);
%}

### Rate recipe as tester
PUT {{api}}/recipes/{{recipe_id}}/rating
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "rating": 5
}

> {%
    client.assert(response.status == 200);
    client.global.set("rating_id", response.body.id);
%}

### Delete recipe as user who posted it
DELETE {{api}}/recipes/{{recipe_id}}
Authorization: Bearer {{admin_token}}

> {%
    client.assert(response.status == 200);
%}

### Recipe removed
GET {{api}}/recipes/{{recipe_id}}

> {%
    client.assert(response.status == 404);
%}

### Add new recipe as tester user
POST {{api}}/recipes
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "don't delete me",
  "preparationTime": "PT90M",
  "description": "za obrisati",
  "preparationDescription": "1. Stvori\n2. Obriši",
  "category": "Desert",
  "ingredients": [
    {
      "ingredient": {
        "name": "ništa"
      },
      "amount": 0
    }
  ]
}

> {%
    client.global.set("recipe_id", response.body.id);
%}

### Comment on default recipe as tester user
POST {{api}}/recipes/1/comments
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "text": "hey"
}

> {%
    client.global.set("comment_id", response.body.id);
%}

### Get tester user id
GET {{api}}/profile/tester
Authorization: Bearer {{admin_token}}

> {%
    client.global.set("user_id", response.body.id);
%}

### Delete tester
DELETE {{api}}/persons/{{user_id}}
Authorization: Bearer {{admin_token}}

> {%
    client.assert(response.status == 200);
%}

### Tester's recipe is removed
GET {{api}}/recipes/{{recipe_id}}

> {%
    client.assert(response.status == 404);
%}

### Tester's comment is removed
GET {{api}}/recipes/1/comments/{{comment_id}}

> {%
    client.assert(response.status == 404);
%}